{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swarnima.mazumdar\\\\Desktop\\\\MY_Reads\\\\nd0191-c1-myreads\\\\starter\\\\src\\\\Components\\\\BookSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as BooksAPI from \"../utils/BooksAPI\";\nimport { useParams } from 'react-router-dom';\nimport Results from './Results';\nimport SearchBar from './SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookSearch = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [query, setQuery] = useState('');\n  const [matchedBooks, setMatchedBooks] = useState([]);\n\n  const updateQuery = query => {\n    let trimmedQuery = query.replace(/^\\s+/, '');\n    setQuery(trimmedQuery);\n    fetchMatchedBooks(trimmedQuery);\n  };\n\n  const fetchMatchedBooks = query => {\n    if (query.length !== 0) {\n      BooksAPI.search(query).then(matchedBooks => {\n        if (matchedBooks.error) {\n          setMatchedBooks([]);\n        } else {\n          setMatchedBooks(matchedBooks);\n        }\n      });\n    } else {\n      setMatchedBooks([]);\n    }\n  };\n\n  useEffect(() => {\n    return () => {\n      setQuery('');\n      setMatchedBooks([]);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      query: query,\n      updateQuery: updateQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {\n      matchedBooks: matchedBooks,\n      changeShelf: props.changeShelf,\n      books: props.books,\n      currentShelf: props.currentShelf,\n      path: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookSearch, \"TzZT8gYZ6zkGi1y3W7hvhD06q/o=\", false, function () {\n  return [useParams];\n});\n\n_c = BookSearch;\nexport default BookSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookSearch\");","map":{"version":3,"sources":["C:/Users/swarnima.mazumdar/Desktop/MY_Reads/nd0191-c1-myreads/starter/src/Components/BookSearch.js"],"names":["React","useState","useEffect","BooksAPI","useParams","Results","SearchBar","BookSearch","props","id","query","setQuery","matchedBooks","setMatchedBooks","updateQuery","trimmedQuery","replace","fetchMatchedBooks","length","search","then","error","changeShelf","books","currentShelf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAO,KAAKC,QAAZ,MAA0B,mBAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AACA,MAAOC,UAAU,GAAGC,KAAD,IAAU;AAAA;;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAAOL,SAAS,EAAtB;AAEC,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMa,WAAW,GAAIJ,KAAD,IAAW;AAC7B,QAAIK,YAAY,GAAGL,KAAK,CAACM,OAAN,CAAc,MAAd,EAAsB,EAAtB,CAAnB;AACAL,IAAAA,QAAQ,CAACI,YAAD,CAAR;AACAE,IAAAA,iBAAiB,CAACF,YAAD,CAAjB;AACD,GAJD;;AAMA,QAAME,iBAAiB,GAAIP,KAAD,IAAW;AACnC,QAAIA,KAAK,CAACQ,MAAN,KAAiB,CAArB,EAAwB;AACtBf,MAAAA,QAAQ,CAACgB,MAAT,CAAgBT,KAAhB,EAAuBU,IAAvB,CAA6BR,YAAD,IAAkB;AAC5C,YAAIA,YAAY,CAACS,KAAjB,EAAwB;AACtBR,UAAAA,eAAe,CAAC,EAAD,CAAf;AACD,SAFD,MAEO;AACLA,UAAAA,eAAe,CAACD,YAAD,CAAf;AACD;AACF,OAND;AAOD,KARD,MAQO;AACLC,MAAAA,eAAe,CAAC,EAAD,CAAf;AACD;AACF,GAZD;;AAcAX,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACXS,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,eAAe,CAAC,EAAD,CAAf;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEH,KAAlB;AAAyB,MAAA,WAAW,EAAEI;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,YAAY,EAAEF,YAAvB;AAAqC,MAAA,WAAW,EAAEJ,KAAK,CAACc,WAAxD;AAAqE,MAAA,KAAK,EAAEd,KAAK,CAACe,KAAlF;AAAyF,MAAA,YAAY,EAAEf,KAAK,CAACgB,YAA7G;AAA2H,MAAA,IAAI,EAAEf;AAAjI;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAvCD;;GAAOF,U;UACOH,S;;;KADPG,U;AA2CP,eAAeA,UAAf","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport * as BooksAPI from \"../utils/BooksAPI\";\r\nimport { useParams } from 'react-router-dom';\r\nimport Results from './Results';\r\nimport SearchBar from './SearchBar';\r\nconst  BookSearch= (props)=> {\r\n const {id} = useParams()\r\n\r\n  const [query, setQuery] = useState('');\r\n  const [matchedBooks, setMatchedBooks] = useState([]);\r\n\r\n  const updateQuery = (query) => {\r\n    let trimmedQuery = query.replace(/^\\s+/, '');\r\n    setQuery(trimmedQuery);\r\n    fetchMatchedBooks(trimmedQuery);\r\n  };\r\n\r\n  const fetchMatchedBooks = (query) => {\r\n    if (query.length !== 0) {\r\n      BooksAPI.search(query).then((matchedBooks) => {\r\n        if (matchedBooks.error) {\r\n          setMatchedBooks([]);\r\n        } else {\r\n          setMatchedBooks(matchedBooks);\r\n        }\r\n      });\r\n    } else {\r\n      setMatchedBooks([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setQuery('');\r\n      setMatchedBooks([]);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"search-books\">\r\n      <SearchBar query={query} updateQuery={updateQuery}/>\r\n      <Results matchedBooks={matchedBooks} changeShelf={props.changeShelf} books={props.books} currentShelf={props.currentShelf} path={id}/>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default BookSearch;"]},"metadata":{},"sourceType":"module"}